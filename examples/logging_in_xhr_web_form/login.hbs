<!DOCTYPE html>
<html>
<head>
  <title>Logging In - XHR Web Form - Login</title>
  <script type="text/javascript" src="http://localhost:8080/node_modules/jquery/dist/jquery.js"></script>
  <style type="text/css">
    body {
      padding: 0 10px;
    }

    #form-wrapper {
      padding: 10px 20px;
      background-color: #eee;
    }

    ul {
      list-style-type: none;
    }

    li {
      margin: 10px 0;
    }

    .error {
      color: red;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h2>login.html</h2>
  <p>
    This example uses an XHR that POSTs username and password to the node server.
  </p>
  <p>
    In this recipe we are going to test that sessions (cookies) are properly sent, we'll test form errors, and then show how you can bypass the UI entirely to speed up your tests.
  </p>
  <div id="form-wrapper">
    <form>
      <ul>
        <li>
          <label>
            Username:
            <input name="username" />
          </label>
        </li>
        <li>
          <label>
            Password:
            <input name="password" />
          </label>
        </li>
        <li>
          <button type="submit">Submit</button>
        </li>
      </ul>
    </form>
    <p class="error"></p>
  </div>
  <script type="text/javascript">
    $(function(){
      var $username = $("input[name=username]")
      var $password = $("input[name=password]")
      var $error    = $(".error")

      window.Login = {
        redirect: function(str){
          window.location.pathname = str
        },

        onSuccess: function(data){
          var redirect = data.redirect || "/dashboard"

          Login.redirect(redirect)
        },

        onError: function(jqXhr, textStatus, errorThrown){
          var status = jqXhr.status

          // if we have a validation problem
          if(status === 422){
            // pluck out the error from the JSON
            var json = jqXhr.responseJSON
            var text = json && json.error
          } else {
            // we dont know what went wrong with the server
            var text = ["An error occurred:", status, errorThrown].join(" ")
          }

          // fill it in
          $error.text(text)
        }
      }

      $("form").submit(function(e){
        // dont actually submit the form
        e.preventDefault()

        // post some JSON
        $.post({
          url: "/login",
          dataType: "json",
          contentType: "application/json",
          data: JSON.stringify({
            username: $username.val(),
            password: $password.val()
          })
        })
        .done(Login.onSuccess)
        .fail(Login.onError)
      })
    })
  </script>
</body>
</html>
